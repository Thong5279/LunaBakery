import React, { useEffect, useMemo } from "react";
import { useSelector, useDispatch } from "react-redux";
import { FaBirthdayCake, FaClock, FaCalendar, FaChartLine, FaQuoteLeft, FaBook, FaExclamationTriangle, FaListUl } from "react-icons/fa";
import { fetchBakerOrders } from "../redux/slices/bakerOrderSlice";

const RULES = [
  "ƒê·∫£m b·∫£o v·ªá sinh an to√†n th·ª±c ph·∫©m trong m·ªçi c√¥ng ƒëo·∫°n.",
  "Kh√¥ng s·ª≠ d·ª•ng nguy√™n li·ªáu qu√° h·∫°n ho·∫∑c kh√¥ng r√µ ngu·ªìn g·ªëc.",
  "Gi·ªØ g√¨n khu v·ª±c l√†m vi·ªác s·∫°ch s·∫Ω, g·ªçn g√†ng.",
  "B√°o c√°o ngay cho qu·∫£n l√Ω khi ph√°t hi·ªán s·ª± c·ªë v·ªÅ nguy√™n li·ªáu ho·∫∑c thi·∫øt b·ªã.",
  "Kh√¥ng t·ª± √Ω r·ªùi kh·ªèi v·ªã tr√≠ khi ch∆∞a ho√†n th√†nh nhi·ªám v·ª•."
];

const REGULATIONS = [
  "M·ªçi s·∫£n ph·∫©m ph·∫£i ƒë√∫ng c√¥ng th·ª©c, ƒë√∫ng ƒë·ªãnh l∆∞·ª£ng.",
  "Th·ªùi gian ho√†n th√†nh ƒë∆°n h√†ng ph·∫£i tu√¢n th·ªß quy ƒë·ªãnh c·ªßa LunaBakery.",
  "Kh√¥ng chia s·∫ª c√¥ng th·ª©c n·ªôi b·ªô ra ngo√†i.",
  "T√¥n tr·ªçng ƒë·ªìng nghi·ªáp, h·ªó tr·ª£ l·∫´n nhau trong c√¥ng vi·ªác.",
  "Lu√¥n c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng tr√™n h·ªá th·ªëng."
];

const MOTIVATION_QUOTES = [
  "Kh√¥ng c√≥ th√†nh c√¥ng n√†o ƒë·∫øn t·ª´ s·ª± l∆∞·ªùi bi·∫øng.",
  "M·ªói chi·∫øc b√°nh l√† m·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t, h√£y l√†m b·∫±ng c·∫£ tr√°i tim!",
  "ƒêam m√™ l√† nguy√™n li·ªáu b√≠ m·∫≠t c·ªßa m·ªçi chi·∫øc b√°nh ngon.",
  "H√£y ƒë·ªÉ m√πi th∆°m c·ªßa b√°nh lan t·ªèa ni·ªÅm vui ƒë·∫øn m·ªçi ng∆∞·ªùi.",
  "Ch·ªâ c·∫ßn b·∫°n c·ªë g·∫Øng, m·ªçi th·ª© ƒë·ªÅu c√≥ th·ªÉ!"
];

// Demo: top 3 th·ª£ l√†m b√°nh (c√≥ th·ªÉ l·∫•y t·ª´ API n·∫øu c√≥)
const TOP_BAKERS = [
  { name: "Nguy·ªÖn VƒÉn A", total: 120 },
  { name: "Tr·∫ßn Th·ªã B", total: 110 },
  { name: "L√™ VƒÉn C", total: 98 },
];

// Demo: th√¥ng b√°o n·ªôi b·ªô
const NOTIFICATIONS = [
  { id: 1, message: "L∆∞u √Ω: Ki·ªÉm tra k·ªπ h·∫°n s·ª≠ d·ª•ng nguy√™n li·ªáu tr∆∞·ªõc khi l√†m b√°nh!", type: "warning" },
];

const BakerHomePage = () => {
  const dispatch = useDispatch();
  const { user } = useSelector((state) => state.auth);
  const { orders, loading } = useSelector((state) => state.bakerOrders);

  useEffect(() => {
    if (!orders || orders.length === 0) {
      dispatch(fetchBakerOrders());
    }
  }, [dispatch]);

  // Th·ªëng k√™
  const today = new Date();
  const todayStr = today.toISOString().slice(0, 10);
  const ordersToday = useMemo(() =>
    orders.filter(order => new Date(order.createdAt).toISOString().slice(0, 10) === todayStr),
    [orders, todayStr]
  );
  const totalOrders = orders.length;

  // L·ªãch s·ª≠ ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y (5 ƒë∆°n g·∫ßn nh·∫•t)
  const recentOrders = useMemo(() =>
    orders.slice(0, 5),
    [orders]
  );

  // Random quote
  const randomQuote = useMemo(() => {
    const idx = Math.floor(Math.random() * MOTIVATION_QUOTES.length);
    return MOTIVATION_QUOTES[idx];
  }, []);

  return (
    <div className="space-y-6">
      {/* Ch√†o m·ª´ng + avatar th·ª£ l√†m b√°nh */}
      <div className="flex items-center gap-6 bg-gradient-to-r from-blue-100 via-purple-100 to-pink-100 p-6 rounded-lg shadow-lg border border-blue-200">
        <img
          src="https://images-platform.99static.com/lU-GBE1-IiZezutUfdYfUThnGfQ=/500x500/top/smart/99designs-contests-attachments/17/17795/attachment_17795074"
          alt="Baker Icon"
          className="w-20 h-20 rounded-full border-4 border-blue-300 shadow-lg"
        />
        <div>
          <h1 className="text-2xl font-bold text-blue-700 mb-1">Ch√†o m·ª´ng, {user?.name || "Th·ª£ l√†m b√°nh"}!</h1>
          <p className="text-blue-600">Trang l√†m vi·ªác d√†nh cho th·ª£ l√†m b√°nh LunaBakery</p>
        </div>
      </div>

      {/* Th√¥ng b√°o n·ªôi b·ªô */}
      {NOTIFICATIONS.length > 0 && (
        <div className="space-y-2">
          {NOTIFICATIONS.map(n => (
            <div key={n.id} className={`p-4 rounded-lg shadow flex items-center gap-3 ${n.type === 'warning' ? 'bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800' : 'bg-green-50 border-l-4 border-green-400 text-green-800'}`}>
              {n.type === 'warning' ? <FaExclamationTriangle className="text-yellow-400" /> : <FaBirthdayCake className="text-green-400" />}
              <span>{n.message}</span>
            </div>
          ))}
        </div>
      )}

      {/* N√∫t truy c·∫≠p nhanh */}
      <div className="flex flex-wrap gap-4">
        <a href="/baker/orders" className="flex items-center gap-2 px-4 py-2 bg-blue-200 text-blue-700 rounded-lg shadow hover:bg-blue-300 transition-colors">
          <FaListUl /> ƒê∆°n h√†ng c·∫ßn l√†m
        </a>
        <a href="/baker/recipes" className="flex items-center gap-2 px-4 py-2 bg-purple-200 text-purple-700 rounded-lg shadow hover:bg-purple-300 transition-colors">
          <FaBook /> C√¥ng th·ª©c
        </a>
        <a href="/baker/report" className="flex items-center gap-2 px-4 py-2 bg-pink-200 text-pink-700 rounded-lg shadow hover:bg-pink-300 transition-colors">
          <FaExclamationTriangle /> B√°o c√°o s·ª± c·ªë
        </a>
      </div>

      {/* Th·ªëng k√™ nhanh */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-gradient-to-br from-blue-200 to-blue-300 p-6 rounded-lg shadow-lg flex items-center justify-between">
          <div>
            <p className="text-blue-700 text-sm font-medium">ƒê∆°n h√†ng h√¥m nay</p>
            <p className="text-3xl font-bold text-blue-800">{loading ? '...' : ordersToday.length}</p>
          </div>
          <FaCalendar className="text-blue-600 text-3xl" />
        </div>
        <div className="bg-gradient-to-br from-purple-200 to-purple-300 p-6 rounded-lg shadow-lg flex items-center justify-between">
          <div>
            <p className="text-purple-700 text-sm font-medium">T·ªïng s·ªë ƒë∆°n l√†m b√°nh</p>
            <p className="text-3xl font-bold text-purple-800">{loading ? '...' : totalOrders}</p>
          </div>
          <FaBirthdayCake className="text-purple-600 text-3xl" />
        </div>
        <div className="bg-gradient-to-br from-pink-200 to-pink-300 p-6 rounded-lg shadow-lg flex items-center justify-between">
          <div>
            <p className="text-pink-700 text-sm font-medium">T·ª∑ l·ªá ho√†n th√†nh</p>
            <p className="text-3xl font-bold text-pink-800">100%</p>
          </div>
          <FaChartLine className="text-pink-600 text-3xl" />
        </div>
      </div>

      {/* N·ªôi quy v√† Quy ƒë·ªãnh */}
      <div className="bg-gradient-to-r from-blue-100 via-purple-100 to-pink-100 border-l-4 border-blue-300 p-6 rounded-lg shadow-lg relative overflow-hidden">
        <div className="flex items-start gap-4">
          <div className="flex-1">
            <h2 className="text-xl font-bold text-blue-700 mb-4">N·ªôi quy & Quy ƒë·ªãnh LunaBakery</h2>
            
            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <h3 className="text-lg font-semibold text-purple-600 mb-2">üìã N·ªôi quy d√†nh cho th·ª£ l√†m b√°nh</h3>
                <ul className="list-disc pl-6 text-blue-800 space-y-1">
                  {RULES.map((rule, idx) => <li key={idx}>{rule}</li>)}
                </ul>
              </div>
              
              <div>
                <h3 className="text-lg font-semibold text-pink-600 mb-2">üìñ Quy ƒë·ªãnh c·ªßa LunaBakery</h3>
                <ul className="list-disc pl-6 text-purple-800 space-y-1">
                  {REGULATIONS.map((reg, idx) => <li key={idx}>{reg}</li>)}
                </ul>
              </div>
            </div>
          </div>
          <div className="flex-shrink-0">
            <img 
              src="https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3aTU3NHhqd2NqeDRiN3N5dTV4NzZhM2dkODQzdzY2amVqOGt6bXJ6ZyZlcD12MV9zdGlja2Vyc19zZWFyY2gmY3Q9cw/aU1zEDJ9xPVjFBbtvJ/giphy.gif" 
              alt="Linh v·∫≠t ƒë·ªçc n·ªôi quy v√† quy ƒë·ªãnh" 
              className="w-24 h-24 rounded-lg"
            />
          </div>
        </div>
      </div>

      {/* L·ªãch s·ª≠ ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y */}
      <div className="bg-gradient-to-r from-blue-100 via-purple-100 to-pink-100 border border-blue-300 p-6 rounded-lg shadow-lg">
        <h3 className="text-lg font-bold text-blue-700 mb-3">L·ªãch s·ª≠ ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
        {recentOrders.length === 0 ? (
          <p className="text-blue-600 italic">Ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
        ) : (
          <ul className="divide-y divide-blue-300">
            {recentOrders.map((order, idx) => (
              <li key={order._id || idx} className="py-3 flex items-center gap-4 hover:bg-blue-200 rounded-lg px-2 transition-colors">
                <FaBirthdayCake className="text-purple-500" />
                <span className="font-medium text-blue-800">#{order._id?.slice(-6) || '---'}</span>
                <span className="text-purple-600 text-sm">{new Date(order.createdAt).toLocaleString('vi-VN')}</span>
                <span className="text-xs px-3 py-1 rounded-full bg-gradient-to-r from-blue-300 to-purple-300 text-white ml-auto">{order.status}</span>
              </li>
            ))}
          </ul>
        )}
      </div>

      {/* C√¢u n√≥i truy·ªÅn c·∫£m h·ª©ng */}
      <div className="bg-gradient-to-r from-blue-200 via-purple-200 to-pink-200 border-l-4 border-blue-400 p-6 rounded-lg shadow-lg flex items-center gap-4">
        <FaQuoteLeft className="text-blue-600 text-3xl" />
        <span className="italic text-blue-800 text-lg font-medium">{randomQuote}</span>
      </div>
    </div>
  );
};

export default BakerHomePage; 